# Set GCC.
#export CC=/usr/local/bin/gcc
#export CXX=/usr/local/bin/g++
#export SYSTEM_VERSION_COMPAT=1
#export LDFLAGS="${LDFLAGS} -L/usr/local/opt/zlib/lib"
#export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/zlib/include"
#export LDFLAGS="${LDFLAGS} -L/usr/local/opt/sqlite/lib"
#export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/sqlite/include"
#export PKG_CONFIG_PATH="${PKG_CONFIG_PATH} /usr/local/opt/zlib/lib/pkgconfig"
#export PKG_CONFIG_PATH="${PKG_CONFIG_PATH} /usr/local/opt/sqlite/lib/pkgconfig"
#export LDFLAGS:  -L/usr/local/opt/openssl/lib
#export CPPFLAGS: -I/usr/local/opt/openssl/include

# Set Anyenv.
if [ -d "${HOME}/.anyenv" ] ; then
    export ANYENV_ROOT="${HOME}/.anyenv"
    export PATH="${ANYENV_ROOT}/bin:${PATH}"
    if command -v anyenv 1>/dev/null 2>&1 ; then
        cached_eval 'anyenv init -' 'anyenv.cache'
    fi
fi
eval "$(pyenv virtualenv-init -)"

# Set Cargo.
if [ -d "${HOME}/.cargo" ] ; then
    export CARGO_ROOT="${HOME}/.cargo"
    export PATH="${CARGO_ROOT}/bin:${PATH}"
fi

# Set Spark.
if [ -d /usr/local/Cellar/apache-spark ] ; then
    export SPARK_VERSION=2.2.1
    export SPARK_HOME="/usr/local/Cellar/apache-spark/${SPARK_VERSION}/libexec"
    export PYTHONPATH=/"usr/local/Cellar/apache-spark/${SPARK_VERSION}/libexec/python/:$PYTHONPATH"
fi
